from typing import Tuple, Union

class Rgb:

	red: int
	green: int
	blue: int

	def __init__(self, r: int, g: int, b: int) -> None: ...

	def set_red(self, red: int) -> None: ...

	def set_green(self, red: int) -> None: ...

	def set_blue(self, red: int) -> None: ...


class Rgba:

	red: int
	green: int
	blue: int
	alpha: int

	def __init__(self, r: int, g: int, b: int) -> None: ...

	def set_red(self, red: int) -> None: ...

	def set_green(self, red: int) -> None: ...

	def set_blue(self, red: int) -> None: ...

	def set_alpha(self, red: int) -> None: ...

class Image:

	format: str
	size: Tuple[int, int]
	height: int
	width: int
	mode: str


	def __init__(self, image: Union[str, bytes]) -> None: ...

	def __str__(self) -> str: ...

	def __repr__(self) -> str: ...

	def save(self, path: str) -> None: ...

	def save_jpeg_bytes(self, quality: int) -> bytes: ...

	def save_bytes(self, *, image_format: str) -> bytes: ...

	def save_base_64(self) -> str: ...

	def filter(self, filter: str) -> None: ...

	def color(self, rgb: Rgb) -> None: ...

	def color_no_grayscale(self, rgb: Rgb) -> None: ...

	def gradient(self, low: Rgb, medium: Rgb, high: Rgb) -> None: ...

	def colorize(self) -> None: ...

	def horizontal_strips(self, num: int) -> None: ...

	def vertical_strips(self, num: int) -> None: ...

	def inc_brightness(self, num: int) -> None: ...

	def primary(self) -> None: ...

	def adjust_contrast(self, num: float) -> None: ...

	def solarize(self) -> None: ...

	def tint(self, red_offset: int, green_offset: int, blue_offset: int) -> None: ...

	def offset(self, channel_index: int, offset: int) -> None: ...

	def offset_blue(self, offset: int) -> None: ...

	def offset_green(self, offset: int) -> None: ...

	def offset_red(self, offset: int) -> None: ...

	def unshapen(self, sigma: float, treshold: int) -> None: ...

	def brighten(self, treshold: int) -> None: ...

	def invert(self) -> None: ...

	def oil(self, radius: int, intensity: float) -> None: ...

	def frosted_glass(self) -> None: ...

	def halftone(self) -> None: ...

	def vertical_strips_coloured(self, num: int, rgb: Rgb) -> None: ...

	def horizontal_strips_coloured(self, num: int, rgb: Rgb) -> None: ...

	def add_noise_rand(self) -> None: ...

	def pink_noise(self) -> None: ...


